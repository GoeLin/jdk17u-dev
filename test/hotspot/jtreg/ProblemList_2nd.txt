###############################################################################
#
# This is the SAP jtreg exclude list for OpenJDK 17u-dev hotspot tests.
#
# List of tests that should not be run by test/Makefile, for various reasons:
#   1. Does not run with jtreg -samevm mode
#   2. Causes problems in jtreg -samevm mode for jtreg or tests that follow it
#   3. The test is too slow or consumes too many system resources
#   4. The test fails when run on any official build systems
#
# Tests marked @ignore are not run by test/Makefile, but harmless to be listed.
#
# List items are testnames followed by labels, all MUST BE commented
#   as to why they are here and use a label:
#     generic-all   Problems on all platforms
#     generic-ARCH  Where ARCH is one of: sparc, sparcv9, x64, i586, ppc64,
#                   ppc64le, s390x etc
#     OSNAME-all    Where OSNAME is one of: solaris, linux, windows, macosx, aix
#     OSNAME-ARCH   Specific on to one OSNAME and ARCH, e.g. solaris-amd64
#     OSNAME-REV    Specific on to one OSNAME and REV, e.g. solaris-5.8
#
# More than one label is allowed but must be on the same line comma seperated,
# without spaces!
# If there are several lines, the last one is used.
#
# SAP/SapMachine usage notes:
#
# This exclude list is a vehicle only for temporary exclusions of tests
# or exclusions that are caused by infrastrucure specifics.
#
# Our first goal is to fix test issues upstream or at least open upstream
# bugs and get the test excluded via the upstream exclusion list.
#
# This list is refreshed periodically from an SAP-internal version,
# removing comments which reveal internal URLs, names or hostnames.
#
# It might contain additional test exclusions, specific to the SapMachine build
# and test infrastructure. That section is found at the end of the file.
#
###############################################################################

###############################################################################
# Failing new tests, unsupported new features in jdk12

# SapMachine GL 2019-01-08
# Could not reserve enough space for 131072KB object heap
# http://sapjvm:1080/servlet/testresult?testid=208162799
# SapMachine CL 2023-09-16 Try again
#gc/shenandoah/jvmti/TestHeapDump.java                                                windows-all

# SapMachine GL 2019-02-08
# SapMachine CL 2019-08-29 Fails in SapMachine 13 and 14
# http://sapjvm:1080/servlet/suiteresult?suiteid=15463390
# Failing for Shenandoah and 32g heaps.
# SapMachine CL 2023-09-16 Try again
#runtime/CompressedOops/UseCompressedOops.java                                        windows-all

###############################################################################
# Failing new tests, unsupported new features in jdk15

# SapMachine GL 2020-09-17
# Fails with: RuntimeException: 'Unloaded library with handle' missing from stdout/stderr
# Recurring, 1-2 times a month.
# SapMachine CL 2023-09-16 Try again
#runtime/logging/loadLibraryTest/LoadLibraryTest.java                                 generic-all

###############################################################################
# New failures detected after GA of 17.0.5 (e.g. seen only in jdk11u-dev after branching 17.0.5 to jdk17u)

# SapMachine MBS 2022-12-30 test has timeouts, vector API is rather slow on ppc
# http://test.sapmachine.only.sap:1080/servlet/testresult?show_similar_failed_tests=true&testid=248736651
# maybe test changes of 8276151 would improve test speed?
compiler/vectorapi/VectorCastShape64Test.java                                        generic-ppc64,linux-ppc64le

###############################################################################
# New failures detected after GA of 17.0.9 (e.g. seen only in jdk17u-dev after branching 17.0.9 to jdk17u)
\n\n
###############################################################################
#
# This is the SAP jtreg exclude list for ALL OpenJDK hotspot tests.
#

# This list is concatenated to all hs ProblemList files passed by the
# build to the test framework.
# The purpose is to disable a test in all builds at once, in case it
# fails everywhere.
# This can be caused by external changes: Often Certificates expire,
# or a test fails on a certain operating system we recently introduced.
# Further someone could have backported a change before recognizing
# it causes failures, or not knowing of failures in our, SAPs, testing.
#

# TODO: should we exclude jdk-dev?  I.e. avoid this file being appended to
# jdk-dev's ProblemLists, so that the error can be monitored there?

